apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: sheepdog-deployment
spec:
  selector:
    # Only select pods based on the 'app' label
    matchLabels:
      app: sheepdog
      release: production
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: sheepdog
        release: production
        GEN3_DATE_LABEL
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - sheepdog
              topologyKey: "kubernetes.io/hostname"
      automountServiceAccountToken: false
      volumes:
        - name: shared-data
          emptyDir: {}
        - name: config-volume
          secret:
            secretName: "sheepdog-secret"
        - name: creds-volume
          secret:
            secretName: "sheepdog-creds"
        - name: config-helper
          configMap:
            name: config-helper
        - name: cert-volume
          secret:
            secretName: "cert-sheepdog-service"
        - name: ca-volume
          secret:
            secretName: "service-ca"
      # sheepdog transactions take forever -
      # try to let the complete before termination
      terminationGracePeriodSeconds: 300
      containers:
        - name: sheepdog
          GEN3_SHEEPDOG_IMAGE
          env:
          - name: DICTIONARY_URL
            valueFrom:
              configMapKeyRef:
                name: manifest-global
                key: dictionary_url          
          - name: GEN3_DEBUG
            GEN3_DEBUG_FLAG|-value: "False"-|
          - name: GEN3_SIDECAR
            value: "GEN3_SHEEPDOG_SIDECAR|-False-|"
          volumeMounts:
            - name: "shared-data"
              mountPath: "/var/run/gen3"
            - name: "config-volume"
              readOnly: true
              mountPath: "/var/www/sheepdog/wsgi.py"
              subPath: "wsgi.py"
            - name: "creds-volume"
              readOnly: true
              mountPath: "/var/www/sheepdog/creds.json"
              subPath: creds.json
            - name: "config-helper"
              readOnly: true
              mountPath: "/var/www/sheepdog/config_helper.py"
              subPath: config_helper.py  
            - name: "ca-volume"
              # See https://askubuntu.com/questions/645818/how-to-install-certificates-for-command-line
              readOnly: true
              mountPath: "/usr/local/share/ca-certificates/cdis/cdis-ca.crt"
              subPath: "ca.pem"  
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 1.0
              memory: 1024Mi
          livenessProbe:
            httpGet:
              path: /_status
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /_status
              port: 80
          ports:
          - containerPort: 80
          - containerPort: 443
        #
        # Containers interact via /var/run/gen3/uwsgi.sock ...
        # Note: the sidecar is disabled unless GEN3_PEREGRINE_SIDECAR
        #   is enabled in the manifest
        #
        - name: sidecar
          GEN3_SIDECAR_IMAGE|-image: 'quay.io/cdis/sidecar:1.3.1-sidecar'-|
          ports:
          - containerPort: 80
          - containerPort: 443
          env:
          - name: GEN3_UWSGI_TIMEOUT
            value: "GEN3_PEREGRINE_SIDECAR_TIMEOUT|-45-|"
          - name: GEN3_SIDECAR
            value: "GEN3_PEREGRINE_SIDECAR|-False-|"
          volumeMounts:
            - name: "shared-data"
              mountPath: "/var/run/gen3"
            - name: "cert-volume"
              readOnly: true
              mountPath: "/mnt/ssl/service.crt"
              subPath: "service.crt"
            - name: "cert-volume"
              readOnly: true
              mountPath: "/mnt/ssl/service.key"
              subPath: "service.key"
            - name: "ca-volume"
              # See https://askubuntu.com/questions/645818/how-to-install-certificates-for-command-line
              readOnly: true
              mountPath: "/usr/local/share/ca-certificates/cdis-ca.crt"
              subPath: "ca.pem"
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 0.3
              memory: 256Mi
